version: "3.9"
services:
  redis-service:
    image: redis/redis-stack-server:latest
    container_name: redis-container
    environment:
      REDIS_ARGS: "--appendonly yes"

    volumes:
      - type: volume
        source: redis_data
        target: /data

    ports:
      - target: 6379
        published: 6379
        protocol: tcp
        mode: bridge

  api-app-service:
    container_name: api-app-container

    build:
      context: .

    ports:
      - target: 10080
        published: 10080
        protocol: tcp
        mode: bridge

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pepapi.rule=Host(`pepapi.sahl.solutions`)"
      - "traefik.http.routers.pepapi.entrypoints=secure"
      - "traefik.http.routers.pepapi.tls.certresolver=primary"
      - "traefik.http.routers.pepapi.tls.options=tls13@file"

      - "traefik.http.routers.pepapi.tls.domains[0].main=pepapi.sahl.solutions"
      - "traefik.http.routers.pepapi.tls.domains[0].sans=demo.sahl.solutions"

      - "traefik.http.routers.dashboard.rule=Host(`pepapi.sahl.solutions`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.tls.certresolver=primary"
      - "traefik.http.routers.dashboard.service=api@internal"

    restart: unless-stopped

    depends_on:
      - redis-service


  traefik-service:
    container_name: traefik-container
    image: traefik:latest

    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: bridge

      - target: 443
        published: 443
        protocol: tcp
        mode: bridge

    volumes:
      - /run/docker.sock:/var/run/docker.sock:ro
      - "/letsencrypt:/letsencrypt"
      - "./traefik/traefik.yml:/etc/traefik/traefik.yml"
      - "./traefik/tls-options.yml:/etc/traefik/dynamic/tls-options.yml"

    depends_on:
      - redis-service
      - api-app-service

volumes:
  redis_data:
    driver: local
